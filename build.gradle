

plugins {
    id 'java-library'
    id 'java'
    id 'maven-publish'
    id 'signing'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

signing {
    println "signing"
    sign configurations.archives
}

/*
signing {
    sign publishing.publications.maven
}*/

tasks.register('debug'){
    println myproperty
}



test {
    dependsOn cleanTest
    testLogging.showStandardStreams = true
}

description="${project.name} build script"
group="ai.dev-tools"
version="0.1.0"

group="ai.dev-tools"
archivesBaseName = "ai-devtools-selenium"
version = "0.1.0"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api 'com.google.code.gson:gson:2.9.0'
    api 'com.squareup.okhttp3:okhttp:4.9.3'
    api 'org.seleniumhq.selenium:selenium-java:3.141.59'

    implementation 'io.github.bonigarcia:webdrivermanager:5.1.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'log4j:log4j:1.2.17'
    implementation 'junit:junit:4.13.1'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation "org.mockito:mockito-core:3.+"
}


java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    withJavadocJar()
    withSourcesJar()
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options {
        //setOutputLevel JavadocOutputLevel.VERBOSE
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor true
        
        jFlags '-Dhttp.agent=gradle-javadoc'

        links "https://docs.oracle.com/en/java/javase/11/docs/api/"
        links "https://www.selenium.dev/selenium/docs/api/java/"
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'ai.dev-tools'
            artifactId = 'ai-devtools-selenium'
            version = "0.1.0"
            from components.java

            pom {
                name = 'dev-tools.ai Smartdriver for Selenium'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'The Smartdriver allows to augment your Selenium test with visual AI. You need to create an account at dev-tools.ai'
                url = 'https://dev-tools.ai'

                scm {
                    connection = 'scm:git:https://github.com/dev-tools-ai/java-selenium-sdk'
                    developerConnection = 'scm:git:ssh://github.com/dev-tools-ai/java-selenium-sdk'
                    url = 'https://github.com/dev-tools-ai/java-selenium-sdk'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'edeguine'
                        name = 'Etienne DEGUINE'
                        email = 'etienne@dev-tools.ai'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }

            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
    }
}



/*
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'dev-tools.ai Smartdriver for Selenium'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'The Smartdriver allows to augment your Selenium test with visual AI. You need to create an account at dev-tools.ai'
                url 'https://dev-tools.ai'

                scm {
                    connection = 'scm:git:https://github.com/dev-tools-ai/java-selenium-sdk'
                    developerConnection = 'scm:git:ssh://github.com/dev-tools-ai/java-selenium-sdk'
                    url = 'https://github.com/dev-tools-ai/java-selenium-sdk'
                }
                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'edeguine'
                        name 'Etienne DEGUINE'
                        email 'etienne@dev-tools.ai'
                    }
                }
            }
        }
    }
}
*/


artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

tasks.named('test') {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = '7.4.2'
}
